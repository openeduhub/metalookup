version: '3.4'
# Note: Below services make use of the `deploy.resources.limits.memory` settings which is only supported by docker swarm
# To make these settings work with regular docker-compose the services need to be deployed with the `--compatibility`
# flag. This tells the docker-daemon to translate the `deploy.resources.limits.memory` settings to the v2 compose file
# equivalents and sets the appropriate limits.
# Use: > docker-compose --compatibility up extractor playwright lighthouse

services:
  extractor:
    dns: 8.8.8.8
    image: docker.edu-sharing.com/projects/oeh-redaktion/edusharing-projects-oeh-redaktion-metalookup-api:latest
    ports:
      - "5057:5057"
    links:
      - playwright
      - lighthouse
      - postgres
    depends_on:
      - postgres
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5057/_ping" ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 40s
    restart: always
    deploy:
      resources:
        limits:
          memory: 2000M
    networks:
      - backend
    logging:
      options:
        max-size: "1m"
        max-file: "1"

  playwright:
    dns: 8.8.8.8
    image: browserless/chrome
    restart: always
    environment:
      - "DEFAULT_LAUNCH_ARGS:[\"--disable-dev-shm-usage\"]"
      - "EXIT_ON_HEALTH_FAILURE=true"
    ports:
      - "3000:3000"
    networks:
      - backend

  lighthouse:
    dns: 8.8.8.8
    image: docker.edu-sharing.com/projects/oeh-redaktion/edusharing-projects-oeh-redaktion-metalookup-lighthouse:latest
    ports:
      - "5058:5058"
    restart: always
    deploy:
      resources:
        limits:
          memory: 2000M
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5058/_ping" ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 40s
    networks:
      - backend
    logging:
      options:
        max-size: "1m"
        max-file: "1"

  postgres:
    image: postgres
    ports:
      - "5432:5432"
    restart: always
    environment:
      # by default this will then also use metalookup db
      - POSTGRES_USER=metalookup
      - POSTGRES_PASSWORD=metalookup
    volumes:
      - db_volume:/var/lib/postgresql/data
    networks:
      - backend

volumes:
  db_volume:

networks:
  backend:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1500
