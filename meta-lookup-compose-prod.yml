version: '3.3'

# fixme: what about resource limits (like in dev compose)?
services:

  # The docker-compose 'restart: always' option does not automatically restart unhealthy containers.
  # It only restarts the container if it terminated (from within), or e.g. the host or docker daemon
  # restarted.
  # To avoid being stuck with a running, but unhealthy container, we use the autoheal container which
  # restarts containers explicitly once they become unhealthy. To do that, it needs access to the
  # host's docker socket. See also: https://stackoverflow.com/a/48538213/2160256
  autoheal:
    restart: always
    image: willfarrell/autoheal
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
      - AUTOHEAL_START_PERIOD=30
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  extractor:
    dns: 8.8.8.8
    image: docker.edu-sharing.com/projects/wlo/edu_sharing-projects-wlo-metalookup-api:latest
    ports:
      - "5057:5057"
    links:
      - playwright
      - lighthouse
      - postgres
    depends_on:
      - postgres
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5057/_ping" ]
      interval: 30s
      timeout: 5s
      retries: 3
    labels:
      # tell the autoheal container to restart this container in case of failure
      autoheal: true
    networks:
      - traefik-public
    deploy:
      labels:
        - traefik.frontend.rule=Host:metalookup.openeduhub.net
        # 2.0
        #- "traefik.http.middlewares.testheader.headers.accesscontrolalloworigin=*"
        #- "traefik.http.middlewares.testheader.headers.addvaryheader=false"
        # 1.7
        #- "traefik.frontend.headers.customResponseHeaders=Access-Control-Allow-Origin:*||Access-Control-Allow-Methods:*"
        #- traefik.frontend.headers.customResponseHeaders=Access-Control-Allow-Methods:*
        - traefik.enable=true
        - traefik.port=5057
        - traefik.tags=traefik-public
        - traefik.docker.network=traefik-public
        - traefik.frontend.entryPoints=http,https
        - traefik.frontend.redirect.entryPoint=https

  playwright:
    dns: 8.8.8.8
    image: browserless/chrome
    restart: always
    environment:
      - "DEFAULT_LAUNCH_ARGS:[\"--disable-dev-shm-usage\"]"
      - "EXIT_ON_HEALTH_FAILURE=true"
    ports:
      - "3000:3000"
    networks:
      - traefik-public

  lighthouse:
    dns: 8.8.8.8
    image: docker.edu-sharing.com/projects/wlo/edu_sharing-projects-wlo-metalookup-lighthouse:latest
    restart: always
    ports:
      - "5058:5058"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5058/_ping" ]
      interval: 30s
      timeout: 5s
      retries: 3
    labels:
      # tell the autoheal container to restart this container in case of failure
      autoheal: true
    networks:
      - traefik-public

  postgres:
    image: postgres
    ports:
      - "5432:5432"
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - db_volume:/var/lib/postgresql/data
    networks:
      - traefik-public

volumes:
  db_volume:

networks:
  traefik-public:
    external: true
