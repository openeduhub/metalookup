name: Run python unittests, formatting checks, build wheel file and docker containers and push containers (for main)

on: push

env:
  docker_repository: "docker.edu-sharing.com"
  path_prefix: "/projects/oeh-redaktion/edusharing-projects-oeh-redaktion-metalookup"

jobs:
  python-build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: "3.9.7"
          cache: 'poetry'
      - name: build artifact and install
        run: |
          poetry env use 3.9
          poetry build
          poetry install
      - name: run pre-commit hooks
        run: poetry run pre-commit run --all-file
      - name: run pytest
        run: poetry run pytest
      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheel
          path: |
            dist/*.whl

  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: python-build-and-test # because we generate the wheel file there.
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download wheel artifact
        uses: actions/download-artifact@v3
        with:
          name: wheel

      - name: Log in to edu sharing (only on main)
        run: docker login ${{env.docker_repository}} -u ${{ secrets.DOCKER_EDU_HUB_REGISTRY_USERNAME }} -p ${{ secrets.DOCKER_EDU_HUB_REGISTRY_PASSWORD }}
        if: ${{ github.ref == 'refs/heads/main' }}

      - name: Build the extractor image
        run: docker build -t ${{env.docker_repository}}${{env.path_prefix}}-api:latest .

      - name: Push the extractor image (only on main)
        run: docker push ${{env.docker_repository}}${{env.path_prefix}}-api:latest
        if: ${{ github.ref == 'refs/heads/main' }}

      - name: Build the lighthouse image
        run: docker build -f dockerfile_lighthouse -t ${{env.docker_repository}}${{env.path_prefix}}-lighthouse:latest .

      - name: Push the lighthouse image (only on main)
        run: docker push ${{env.docker_repository}}${{env.path_prefix}}-lighthouse:latest
        if: ${{ github.ref == 'refs/heads/main' }}

      - name: Build the nighly-rerun image
        run: docker build -f dockerfile_nightly_rerun -t ${{env.docker_repository}}${{env.path_prefix}}-nightly_rerun:latest .

      - name: Push the nighly-rerun image (only on main)
        run: docker push ${{env.docker_repository}}${{env.path_prefix}}-nightly_rerun:latest
        if: ${{ github.ref == 'refs/heads/main' }}
